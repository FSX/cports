Hard-disable memory tagging on ARM64 - it does exist there but musl is
missing some required interface headers for it, and it's not clear how
to make the partalloc support code for it work.
note: also disables bti
--
--- a/base/allocator/partition_allocator/partition_alloc.gni
+++ b/base/allocator/partition_allocator/partition_alloc.gni
@@ -29,8 +29,7 @@
   assert(false, "Unknown CPU: $current_cpu")
 }
 
-has_memory_tagging =
-    current_cpu == "arm64" && is_clang && !is_asan && (is_linux || is_android)
+has_memory_tagging = false
 
 declare_args() {
   # Causes all the allocations to be routed via allocator_shim.cc. Usually,
--- a/base/allocator/partition_allocator/src/partition_alloc/aarch64_support.h
+++ b/base/allocator/partition_allocator/src/partition_alloc/aarch64_support.h
@@ -10,7 +10,7 @@
 #include "partition_alloc/build_config.h"
 #include "partition_alloc/partition_alloc_buildflags.h"
 
-#if BUILDFLAG(IS_ANDROID) || BUILDFLAG(IS_LINUX)
+#if 0 && (BUILDFLAG(IS_ANDROID) || BUILDFLAG(IS_LINUX))
 #define HAS_HW_CAPS
 #endif
 
--- a/base/allocator/partition_allocator/src/partition_alloc/page_allocator_internals_posix.cc
+++ b/base/allocator/partition_allocator/src/partition_alloc/page_allocator_internals_posix.cc
@@ -8,8 +8,8 @@
 #include "partition_alloc/page_allocator.h"
 #include "partition_alloc/partition_alloc_buildflags.h"
 
-#if PA_BUILDFLAG(HAS_MEMORY_TAGGING) || \
-    (defined(__ARM_FEATURE_BTI_DEFAULT) && (__ARM_FEATURE_BTI_DEFAULT == 1))
+#if 0 && (PA_BUILDFLAG(HAS_MEMORY_TAGGING) || \
+    (defined(__ARM_FEATURE_BTI_DEFAULT) && (__ARM_FEATURE_BTI_DEFAULT == 1)))
 struct __ifunc_arg_t;
 
 #include "partition_alloc/aarch64_support.h"
