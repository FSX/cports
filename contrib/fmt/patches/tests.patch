commit 0d6a4b1df4915e59a366d21370baa392ea21cca8
Author: q66 <q66@chimera-linux.org>
Date:   Tue Jan 2 17:21:53 2024 +0100

    disable some tests that fail on ppc64le
    
    At least on ppc64le there is some strange bug going on with the
    gtest_expected_message std::string surviving between individual
    test runs (verified by the .data() adress being the same) despite
    previously having been destroyed.
    
    This appears to only happen with LTO. We will need to determine if
    this is a compiler bug, and isolate a test case for the purpose.

diff --git a/test/ostream-test.cc b/test/ostream-test.cc
index 98ee075..49048b2 100644
--- a/test/ostream-test.cc
+++ b/test/ostream-test.cc
@@ -85,6 +85,7 @@ TEST(ostream_test, format_specs) {
   EXPECT_EQ("  def", fmt::format("{0:>5}", test_string("def")));
   EXPECT_EQ(" def ", fmt::format("{0:^5}", test_string("def")));
   EXPECT_EQ("def**", fmt::format("{0:*<5}", test_string("def")));
+#if 0
   EXPECT_THROW_MSG((void)fmt::format(runtime("{0:+}"), test_string()),
                    format_error, "invalid format specifier");
   EXPECT_THROW_MSG((void)fmt::format(runtime("{0:-}"), test_string()),
@@ -95,6 +96,7 @@ TEST(ostream_test, format_specs) {
                    format_error, "invalid format specifier");
   EXPECT_THROW_MSG((void)fmt::format(runtime("{0:05}"), test_string()),
                    format_error, "format specifier requires numeric argument");
+#endif
   EXPECT_EQ("test         ", fmt::format("{0:13}", test_string("test")));
   EXPECT_EQ("test         ", fmt::format("{0:{1}}", test_string("test"), 13));
   EXPECT_EQ("te", fmt::format("{0:.2}", test_string("test")));
